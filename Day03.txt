Set-ExecutionPolicy RemoteSigned
- 개발은 대부분 윈도우에서 해요.
코딩을 흑백화면에서 하는 미친 사람은 없어요
윈도우가 보안프로그램 설정이 이것저것 많아요
그중에서 npm 이라는 명령어는, 시스템을 조작할수 있어요
일반 사용자가 npm 쓰다가 컴퓨터 망칠까봐 일단 막아놨어요
위에 있는 스크립트 명령어로 npm 권한 풀어준 거에요

nodejs 표준이 있어요

파이썬은 표준이 없어요


코딩은 모든걸 외워서 하지 않아요.
자동완성을 적극적으로 쓰셔야 해요


let a =1;
왜 이런 미련한 방법을 써요?
컴퓨터의 최적화를 고려해서 그래요

자바 스크립트에서
let 라는 키워드가 나오면, 변수를 선언 하겠다는 뜻입니다

console.log() 흑백 화면에 출력하라
console.log(``) back tick 은 string interpolation


프로그래밍에서 = 기호는 수학의 equal 이라는 기호가 
아니에요. 프로그래밍에선 대입(save) 연산자 입니다.

a + 3; //4 가 나오긴 했는데.. 저장을 안함
a = a + 3; // a 의 값과 3을 더한다음, 다시 a에 저장하라

a = 1;
b = "2";
c = a + b;
여기서 a 는 숫자1. b 는 문자열 "2"
숫자와 문자열을 + 연산을 하면, 컴퓨터는 그냥 두개를 붙여 버려요


+ - * / %
++ --
제어연산
논리연산
함수()
요걸로 컴퓨터는 작동하고, 이걸 벗어나면 못해요

자바스크립트, 파이썬, 자바, c# 다 데이터 타입이 있어요

기본 자료형 - 
null == 아무값도 없다. 메모리 4비트정도 먹음. 0이랑 완전 틀림
undefined == null 이랑 비슷. undefined 라는 타입.
boolean == true(1), false(0)
number == 숫자(정수, 소수점)
bigint == 조단위 숫자
string == 문자열

comlex 자료형 -
배열(Array) == [] 서랍
Object == {} 선물 셋트

인공지능 자료형 -
numpy == 숫자 덩어리. 컴퓨터가 좋아함
tensor == 전처리된 숫자 덩어리. 컴퓨터가 제일 좋아함.

파이썬, 자바스크립트는 타입이 숨어 있어요.
지가 알아서 정해요.

타입이 없을때의 장점: 어려운 데이터도 일단 받을수 있다.
받고나서, GPT 한테 위탁처리라도 맡길수 있다.

타입이 없을때의 단점: 뭐가 뭔지 모르니, 내가 할수있는게 없다.


타입이 있을때의 장점: 몰라도, 설명서 읽고 검색하면 된다.
사용법 다 나온다.

타입이 있을때의 단점: 어떤 타입을 정해줘야 할지 모르면, 시작도 못한다.



타입이 그렇게 좋은데, 왜 인공지능에선 자바로 안하고, 파이썬해요?
tensor는 진짜 뜯어보면 숫자가 다차원 행렬로 30억개 있어요
30억개의 차원이 있데요.
사람은 알아 들을수가 없어요. 타입을 만들수도 없어요.
근데 컴퓨터는 지네들 세계에선 있데요. 그렇게 해주래요.

그래서 타입을 지정 안하는 파이썬을 쓰는 거에요
일단 30억차원의 데이터를 만들고 받고 주고 해야 되니깐.
