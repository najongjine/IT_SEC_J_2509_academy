npm create hono@latest 내프로잭트 이름
- Scaffolding. 프로젝트 생성 자동

index.ts
요게 핵심. 요기서 코딩하고 논다고 생각하시면 되요

tsconfig
{
  "compilerOptions": {
    "target": "ESNext",
    "module": "NodeNext",
    "noUnusedLocals": false, // 사용되지 않는 지역 변수 경고 끄기
    "noUnusedParameters": false, // 사용되지 않는 함수 매개변수 경고 끄기
    "strict": true,
    "verbatimModuleSyntax": true,
    "skipLibCheck": true,
    "types": ["node"],
    "jsx": "react-jsx",
    "jsxImportSource": "hono/jsx",
    "outDir": "./dist"
  },
  "exclude": ["node_modules"]
}



app.get("/test1", (c) => {
  let result: { success: boolean; data: any; msg: string } = {
    success: true,
    data: null,
    msg: ``,
  };
  try {
    let q = c?.req?.query("q");
    result.data = q;
    return c.json(result);
  } catch (error: any) {
    return c.json(result);
  }
});


DB 연결이 서버에서 제일 어려워요
* npm i -g typeorm-model-generator

* .env.development   파일 루트에 만들기
DB_HOST= 뭐뭐
DB_PORT=5432
DB_USERNAME=neondb_owner
DB_PASSWORD= 뭐뭐
DB_NAME=neondb

* npm i cross-env dotenv pg reflect-metadata rimraf typeorm zod

* src/data-source1.ts
import "reflect-metadata";
import { DataSource } from "typeorm";
import * as dotenv from "dotenv";
import * as path from "path";
import { fileURLToPath } from "url";

const envFile =
  process.env.NODE_ENV === "production"
    ? ".env.production"
    : ".env.development";
dotenv.config({ path: envFile });

// @ts-ignore
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

export const AppDataSource = new DataSource({
  type: "postgres",
  host: process.env.DB_HOST,
  port: parseInt(process.env.DB_PORT || "5432"),
  username: process.env.DB_USERNAME,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_NAME,
  synchronize: false,
  logging: false,
  entities: [path.join(__dirname, "/entities/**/*.{ts,js}")],
  ssl: true,
});
