서버 종류가 많아요

1. 스프링
2. Nodejs
3. FastAPI (파이썬)
4. .NETCore(c#)
5. PHP 솔까 다 서버로서는 합격이에요

효율성 순위 - 코드량이 적고, 딸깍으로 되는 수준

1. NodeJS(typescript)
2. FastAPI
3. .NetCore (웹, 게임)
4. 스프링(자바)
5. PHP



파이썬은 버전 문제가 심각해요.
그래서 어떤 코드는 3.9 에서만 작동,
어떤 코드는 3.10 에서만 작동
어ㄸ너 코드는 3.11~3.12 에서만 작동
어떤놈은 3.13까지 지원


Tensorflow - 구글, 거진 유기함. 근데 문제는 시중에 책은 다 tensorflow로
인공지능 알려줌
- 얘는 3.7~3.9 까지만 지원

Pytorch - Meta, 3.10~3.13 까지만 지원,
요즘은 다 pytorch 로 이사갔어요.
왜냐면, 인공지능은 분야가 너무 어렵고 스트레스가 심해서, 개인이
모든 AI 모델을 다 만들수 없고, 오픈소스 모델들 갔다 쓰는게 허다해요.
근데, pytorch 경험이 없으면 이때 난감해져요.


그래서 파이썬 버전 다 다르게 설치하고, 어떻게 사용할거냐?
uv 라는걸로 사용 할겁니다.

# 피이썬 3.10 버전에 uv를 설치해라
py -3.10 -m pip install uv

# 파이썬 3.10 버전으로 가상환경 만들어라
py -3.10 -m uv venv venv

# 가상환경 활성화 해라
.\venv\Scripts\Activate.ps1


requirements.txt
----------------------
fastapi
uvicorn[standard]
sqlalchemy
asyncpg         # 비동기 PostgreSQL 드라이버 (psycopg2-binary 대신 사용)
pydantic-settings # 환경 변수 관리를 위한 Pydantic 라이브러리
python-dotenv # 로컬 개발 환경에서 .env 파일 로드를 위해 필요 (선택 사항)
pydantic # fastapi req 유효성 검사
scikit-learn
-------------------------

uv pip install -r requirements.txt

## 
만약 uv pip install -r requirements.txt 실행시 에러 난다면
.\venv\Scripts\Activate.ps1  이게 활성화 된 상태에서
pip install uv 해주세요
그다음 uv pip install -r requirements.txt  실행해 주세요
##




------app.py-------
from contextlib import asynccontextmanager
from fastapi import FastAPI, Depends, HTTPException
from pydantic import BaseModel
import uvicorn
import asyncpg
from typing import List, Dict, Any, Union

import os # 환경 변수를 읽기 위해 os 모듈 추가

app = FastAPI()

@app.get("/")
def default_get():
    result={"success":True, "data":None, "msg":""}
    try:
        result["data"]="ok"
        99/0
        return result
    except Exception as e:
        result["success"]=False
        result["msg"]=f"server error. {e!r}"
        return result

if __name__ == "__main__":
    uvicorn.run("app:app", host="localhost", port=8000, reload=True)
------------------

400 (auth) : 권한이 없다. 너 저리 가셈
404 (Not Found): 그런 API 주소(인터넷)는 없다
500 (Internal Server Error): 서버에서 에러 터졌다


인터넷은 모든 데이터를 문자열로 주고 받아요.
서버도 문자열로 받고, 문자열로 줘요